{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Socratis\\\\Desktop\\\\camera-app\\\\src\\\\Pages\\\\Settings.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport './Settings.css';\nimport axios from \"axios\";\nimport ReactPlayer from 'react-player/lazy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = \"http://localhost:5000/express_backend\";\nvar data_config;\nexport function App() {\n  _s();\n\n  const [conf, setPost] = React.useState(null);\n  React.useEffect(() => {\n    axios.get(baseURL).then(response => {\n      setPost(response.data);\n    });\n  }, []);\n  if (!conf) return null;\n  data_config = conf;\n  return conf;\n}\n\n_s(App, \"44wa6FGUoaNLsOSAlWOgBg9YIbg=\");\n\n_c = App;\nexport function read_values() {\n  return App();\n}\n\nfunction replacer(whole_str, str, value_to_change) {\n  var config = '';\n  var result = '';\n  config = whole_str;\n\n  if (config != null) {\n    var split = config.toString().split(\"\\n\");\n    var index, value;\n\n    for (index = 0; index < split.length; ++index) {\n      value = split[index];\n\n      if (value.substring(0, str.length) === str) {\n        result = value;\n        break;\n      }\n    }\n\n    var final_value = result.toString().split('\"')[1];\n    whole_str = whole_str.split(final_value).join(value_to_change);\n    return whole_str;\n  }\n}\n\nfunction write_values(var1, val1, var2, val2, var3, val3, var4, val4, var5, val5) {\n  var mydata;\n  mydata = data_config;\n  mydata = replacer(mydata, var1, val1);\n  mydata = replacer(mydata, var2, val2);\n  mydata = replacer(mydata, var3, val3);\n  mydata = replacer(mydata, var4, val4);\n  mydata = replacer(mydata, var5, val5); //console.log(mydata)\n\n  var to_change = {\n    data: mydata\n  };\n  axios.post('http://localhost:5000/login', to_change);\n}\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (this.handleFormValidation()) {\n        write_values(\"config.deployment.id\", this.state.deployment, \"config.device.node\", this.state.nodeid, \"config.device.type\", this.state.cameraid, \"config.device.gateway\", this.state.gatewayid, \"config.device.interface\", this.state.interfaceid);\n        alert('Data Successfully registered.');\n        this.setState(this.initialState);\n      }\n    };\n\n    this.state = {\n      deployment: '',\n      nodeid: '',\n      cameraid: '',\n      gatewayid: '',\n      interfaceid: '',\n      formErrors: {}\n    };\n    this.initialState = this.state;\n  }\n\n  handleFormValidation() {\n    const {\n      deployment,\n      nodeid,\n      cameraid,\n      gatewayid,\n      interfaceid\n    } = this.state;\n    let formErrors = {};\n    let formIsValid = true;\n\n    if (!deployment) {\n      formIsValid = false;\n      formErrors[\"deploymentErr\"] = \"Mandatory Field\";\n    }\n\n    if (!nodeid) {\n      formIsValid = false;\n      formErrors[\"nodeidErr\"] = \"Mandatory Field\";\n    }\n\n    if (!cameraid) {\n      formIsValid = false;\n      formErrors[\"cameraidErr\"] = \"Mandatory Field\";\n    }\n\n    if (!gatewayid) {\n      formIsValid = false;\n      formErrors[\"gatewayidErr\"] = \"Mandatory Field\";\n    }\n\n    if (!interfaceid) {\n      formIsValid = false;\n      formErrors[\"interfaceidErr\"] = \"Mandatory Field\";\n    }\n\n    this.setState({\n      formErrors: formErrors\n    });\n    return formIsValid;\n  }\n\n  render() {\n    const {\n      deploymentErr,\n      nodeidErr,\n      cameraidErr,\n      gatewayidErr,\n      interfaceidErr\n    } = this.state.formErrors;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Change Settings \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        className: \"reactplayer\",\n        url: \"https://www.youtube.com/watch?v=AohUh4Wx2ps\",\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Deployment:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"deployment\",\n              value: this.state.deployment,\n              onChange: this.handleChange,\n              className: deploymentErr ? ' showError' : '',\n              placeholder: deploymentErr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Node Id:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"nodeid\",\n              value: this.state.nodeid,\n              onChange: this.handleChange,\n              className: nodeidErr ? ' showError' : '',\n              placeholder: nodeidErr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Camera Id:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"cameraid\",\n              value: this.state.cameraid,\n              onChange: this.handleChange,\n              className: cameraidErr ? ' showError' : '',\n              placeholder: cameraidErr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Gateway Id:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"gatewayid\",\n              value: this.state.gatewayid,\n              onChange: this.handleChange,\n              className: gatewayidErr ? ' showError' : '',\n              placeholder: gatewayidErr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Interface:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"interfaceid\",\n              value: this.state.interfaceid,\n              onChange: this.handleChange,\n              className: interfaceidErr ? ' showError' : '',\n              placeholder: interfaceidErr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Socratis/Desktop/camera-app/src/Pages/Settings.js"],"names":["React","Component","useState","useEffect","axios","ReactPlayer","baseURL","data_config","App","conf","setPost","get","then","response","data","read_values","replacer","whole_str","str","value_to_change","config","result","split","toString","index","value","length","substring","final_value","join","write_values","var1","val1","var2","val2","var3","val3","var4","val4","var5","val5","mydata","to_change","post","Settings","constructor","props","handleChange","e","name","target","setState","handleSubmit","preventDefault","handleFormValidation","state","deployment","nodeid","cameraid","gatewayid","interfaceid","alert","initialState","formErrors","formIsValid","render","deploymentErr","nodeidErr","cameraidErr","gatewayidErr","interfaceidErr","textAlign"],"mappings":"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","sourcesContent":["import React, { Component,useState,useEffect} from \"react\";    \r\nimport './Settings.css' \r\nimport axios from \"axios\";\r\nimport ReactPlayer from 'react-player/lazy'\r\n\r\nconst baseURL = \"http://localhost:5000/express_backend\";\r\nvar data_config \r\n\r\nexport function App() {\r\n  const [conf, setPost] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    axios.get(baseURL).then((response) => {\r\n      setPost(response.data);\r\n    });\r\n  }, []);\r\n\r\n  if (!conf) return null;\r\n  data_config = conf\r\n  return (conf);\r\n}\r\n\r\nexport function read_values() {\r\n    return App()\r\n}  \r\n\r\n\r\nfunction replacer(whole_str,str,value_to_change){\r\n    var config=''\r\n    var result =''\r\n    config = whole_str\r\n    if (config != null) {\r\n    var split = config.toString().split(\"\\n\");\r\n \r\n    var index, value;\r\n    for (index = 0; index < split.length; ++index) {\r\n        value = split[index];\r\n        if (value.substring(0, str.length) === str ) {\r\n           result = value;\r\n            break;\r\n        }\r\n    }\r\n    var final_value = result.toString().split('\"')[1]\r\n    whole_str = whole_str.split(final_value).join(value_to_change);\r\n    return(whole_str)\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction write_values(var1,val1,var2,val2,var3,val3,var4,val4,var5,val5) {\r\n    var mydata\r\n    mydata = data_config\r\n    mydata=replacer(mydata,var1,val1)\r\n    mydata=replacer(mydata,var2,val2)\r\n    mydata=replacer(mydata,var3,val3)\r\n    mydata=replacer(mydata,var4,val4)\r\n    mydata=replacer(mydata,var5,val5)\r\n    //console.log(mydata)\r\n    var to_change = {data: mydata};\r\n    axios.post('http://localhost:5000/login', to_change);\r\n}\r\n\r\n\r\n\r\nclass Settings extends Component {\r\n    constructor(props) {    \r\n        super(props);    \r\n        this.state = {    \r\n            deployment: '',    \r\n            nodeid: '',    \r\n            cameraid: '',    \r\n            gatewayid: '',    \r\n            interfaceid: '',   \r\n            formErrors: {}    \r\n        };    \r\n    \r\n        this.initialState = this.state;\r\n    } \r\n    handleFormValidation() {    \r\n        const { deployment, nodeid, cameraid, gatewayid, interfaceid } = this.state;    \r\n        let formErrors = {};    \r\n        let formIsValid = true;\r\n\r\n        if (!deployment) {    \r\n            formIsValid = false;    \r\n            formErrors[\"deploymentErr\"] = \"Mandatory Field\";    \r\n        }    \r\n\r\n        if (!nodeid) {    \r\n            formIsValid = false;    \r\n            formErrors[\"nodeidErr\"] = \"Mandatory Field\";   \r\n        }  \r\n\r\n        if (!cameraid) {    \r\n            formIsValid = false;    \r\n            formErrors[\"cameraidErr\"] = \"Mandatory Field\";    \r\n        }  \r\n\r\n        if (!gatewayid) {    \r\n            formIsValid = false;    \r\n            formErrors[\"gatewayidErr\"] = \"Mandatory Field\";    \r\n        }  \r\n\r\n        if (!interfaceid) {    \r\n            formIsValid = false;    \r\n            formErrors[\"interfaceidErr\"] = \"Mandatory Field\";    \r\n        } \r\n\r\n        this.setState({ formErrors: formErrors });    \r\n        return formIsValid; \r\n    }\r\n\r\n    handleChange = (e) => {    \r\n        const { name, value } = e.target;    \r\n        this.setState({ [name]: value });    \r\n    }  \r\n    \r\n    handleSubmit = (e) => {    \r\n        e.preventDefault(); \r\n        if (this.handleFormValidation()) {    \r\n\r\n            write_values(\"config.deployment.id\",this.state.deployment,\r\n            \"config.device.node\",this.state.nodeid,\r\n            \"config.device.type\",this.state.cameraid,\r\n            \"config.device.gateway\",this.state.gatewayid,\r\n            \"config.device.interface\",this.state.interfaceid)\r\n\r\n            alert('Data Successfully registered.')    \r\n            this.setState(this.initialState)    \r\n        }    \r\n    }  \r\n\r\n    render() {    \r\n        const { deploymentErr, nodeidErr, cameraidErr, gatewayidErr, interfaceidErr} = this.state.formErrors;\r\n        return (    \r\n        <div >   \r\n             <h1 style={{ textAlign: \"center\" }} >Change Settings </ h1>\r\n            \r\n            <ReactPlayer className=\"reactplayer\" url='https://www.youtube.com/watch?v=AohUh4Wx2ps' controls />\r\n            <div className=\"formDiv\">\r\n                <form onSubmit={this.handleSubmit}> \r\n                    <div>    \r\n                        <label>Deployment:</label>    \r\n                        <input type=\"text\" name=\"deployment\"\r\n                        value={this.state.deployment}    \r\n                        onChange={this.handleChange}        \r\n                        className={deploymentErr ? ' showError' : ''} \r\n                        placeholder={deploymentErr}\r\n                        />     \r\n                    </div>   \r\n\r\n                    <div>    \r\n                        <label>Node Id:</label>    \r\n                        <input type=\"text\" name=\"nodeid\"\r\n                        value={this.state.nodeid}    \r\n                        onChange={this.handleChange}        \r\n                        className={nodeidErr ? ' showError' : ''} \r\n                        placeholder={nodeidErr}/>   \r\n                    </div>   \r\n\r\n                    <div>    \r\n                        <label>Camera Id:</label>     \r\n                        <input type=\"text\" name=\"cameraid\"\r\n                        value={this.state.cameraid}    \r\n                        onChange={this.handleChange}        \r\n                        className={cameraidErr ? ' showError' : ''} \r\n                        placeholder={cameraidErr}\r\n                        />    \r\n                    </div>\r\n\r\n                    <div>    \r\n                        <label>Gateway Id:</label>     \r\n                        <input type=\"text\" name=\"gatewayid\"\r\n                        value={this.state.gatewayid}    \r\n                        onChange={this.handleChange}        \r\n                        className={gatewayidErr ? ' showError' : ''} \r\n                        placeholder={gatewayidErr}\r\n                        />    \r\n                    </div>   \r\n\r\n                    <div>    \r\n                        <label>Interface:</label>     \r\n                        <input type=\"text\" name=\"interfaceid\"\r\n                        value={this.state.interfaceid}    \r\n                        onChange={this.handleChange}        \r\n                        className={interfaceidErr ? ' showError' : ''} \r\n                        placeholder={interfaceidErr}\r\n                        />         \r\n                    </div>    \r\n{/*}\r\n                    <div>    \r\n                        <label>Sampling Timestamps:</label>     \r\n                        <input type=\"text\" name=\"samplingtp\"/>      \r\n                    </div>   \r\n\r\n                    <div>    \r\n                        <label>Update Timestamps:</label>     \r\n                        <input type=\"text\" name=\"updatetp\"/>      \r\n                    </div>   \r\n                        */}  \r\n\r\n                    <input type=\"submit\" value=\"Submit\" />    \r\n                </form>    \r\n            </div > \r\n        </div >   \r\n        )    \r\n    }    \r\n}    \r\n\r\nexport default Settings;"]},"metadata":{},"sourceType":"module"}